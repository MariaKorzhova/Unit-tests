Задание 1. Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.

testAddContact - unit-тест, который проверяет добавление контакта в записную книжку.
testChangeContact - unit-тест, который проверяет возможность редактирования контакта в записной книжке.
testDeleteContact - unit-тест, который проверяет возможность удаления контакта из записной книжки.
testNotNull - интеграционный тест, который проверяет не пустой ли список контактов.
testGetAllContacts - интеграционный тест, который проверяет вывод всех контактов.
testFindContact - интеграционный тест, который проверяет поиск контакта.
testAddContactFromUI - сквозной тест, который проверяет добавление контакта в записную книжку через пользовательский интерфейс.
testChangeContactFromUI - сквозной тест, который проверяет возможность редактирования контакта в записной книжке через пользовательский интерфейс.
testDeleteContactFromUI - сквозной тест, который проверяет возможность удаления контакта из записной книжки через пользовательский интерфейс.



Задание 2. Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.

Unit-тест, потому что проверяется один метод addContact.
Проверка того, что функция addContact корректно добавляет новый контакт в список контактов.

Интеграционный тест, потому что проверяется взаимодействие с пользовательским интерфейсом.
Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов.

Сквозной тест, потому что проверяет полный цикл работы.
Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление.
